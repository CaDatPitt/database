# Generated by Django 4.1.9 on 2023-06-17 03:06

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import users.managers
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="CustomUser",
            fields=[
                (
                    "user_id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="user ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "email",
                    models.EmailField(
                        max_length=254, unique=True, verbose_name="email address"
                    ),
                ),
                (
                    "first_name",
                    models.CharField(max_length=150, verbose_name="first name"),
                ),
                (
                    "last_name",
                    models.CharField(max_length=150, verbose_name="last name"),
                ),
                (
                    "username",
                    models.CharField(
                        max_length=25, unique=True, verbose_name="username"
                    ),
                ),
                (
                    "pronouns",
                    models.CharField(
                        blank=True, default="", max_length=25, verbose_name="pronouns"
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        blank=True, default="", max_length=100, verbose_name="title"
                    ),
                ),
                (
                    "affiliation",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=100,
                        verbose_name="affiliation",
                    ),
                ),
                (
                    "bio",
                    models.CharField(
                        blank=True, default="", max_length=5000, verbose_name="bio"
                    ),
                ),
                (
                    "website",
                    models.URLField(
                        blank=True, default="", max_length=500, verbose_name="website"
                    ),
                ),
                (
                    "profile_photo_url",
                    models.URLField(
                        blank=True,
                        default="",
                        max_length=500,
                        verbose_name="profile photo URL",
                    ),
                ),
                (
                    "profile_public",
                    models.BooleanField(default=False, verbose_name="profile_public"),
                ),
                ("is_active", models.BooleanField(default=False)),
                ("is_staff", models.BooleanField(default=False)),
                ("is_superuser", models.BooleanField(default=False)),
                (
                    "date_joined",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                ("last_login", models.DateTimeField(blank=True, null=True)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
            },
            managers=[
                ("objects", users.managers.CustomUserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Collection",
            fields=[
                (
                    "collection_id",
                    models.CharField(
                        max_length=200,
                        primary_key=True,
                        serialize=False,
                        verbose_name="collection ID",
                    ),
                ),
                ("title", models.CharField(max_length=200, verbose_name="title")),
            ],
            options={
                "verbose_name": "collection",
                "verbose_name_plural": "collections",
            },
        ),
        migrations.CreateModel(
            name="Dataset",
            fields=[
                (
                    "dataset_id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="dataset ID",
                    ),
                ),
                ("public_id", models.UUIDField(default=uuid.uuid4, editable=False)),
                (
                    "title",
                    models.CharField(
                        blank=True, default="", max_length=200, verbose_name="title"
                    ),
                ),
                (
                    "description",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=5000,
                        verbose_name="description",
                    ),
                ),
                (
                    "search_paremeters",
                    models.CharField(max_length=500, verbose_name="search parameters"),
                ),
                ("number_items", models.IntegerField(verbose_name="number of items")),
                (
                    "date_created",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date created"
                    ),
                ),
                ("last_modified", models.DateTimeField(blank=True, null=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "dataset",
                "verbose_name_plural": "datasets",
            },
        ),
        migrations.CreateModel(
            name="Item",
            fields=[
                (
                    "item_id",
                    models.CharField(
                        max_length=200,
                        primary_key=True,
                        serialize=False,
                        verbose_name="item ID",
                    ),
                ),
                ("title", models.CharField(max_length=200, verbose_name="title")),
                (
                    "type",
                    models.CharField(
                        blank=True, default="", max_length=25, verbose_name="type"
                    ),
                ),
                (
                    "date_added",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date added"
                    ),
                ),
                ("collections", models.ManyToManyField(to="users.collection")),
            ],
            options={
                "verbose_name": "item",
                "verbose_name_plural": "items",
            },
        ),
        migrations.CreateModel(
            name="PinnedItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "fk_dataset_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="users.item"
                    ),
                ),
                (
                    "fk_user_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "pinned item",
                "verbose_name_plural": "pinned items",
            },
        ),
        migrations.CreateModel(
            name="PinnedDataset",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "fk_dataset_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="users.dataset"
                    ),
                ),
                (
                    "fk_user_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "pinned dataset",
                "verbose_name_plural": "pinned datasets",
            },
        ),
        migrations.AddField(
            model_name="dataset",
            name="items",
            field=models.ManyToManyField(to="users.item"),
        ),
    ]
